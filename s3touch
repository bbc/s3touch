#!/usr/bin/env node

var s3touch = require('./index.js');
var argv = require('minimist')(process.argv.slice(2), {
    boolean: [ 'recursive' ]
});
var s3paths = argv._;
var cache = {};
var topic = null;
var lambda = null;
var requesterPays = false;

if (s3paths.length < 1) {
    console.log(s3touch.usage());
    process.exit(1);
}
if (argv.topic === true) {
    console.log(s3touch.usage());
    process.exit(1);
}
if (argv.lambda === true) {
    console.log(s3touch.usage());
    process.exit(1);
}
function run(err, data) {
    if (err) {
        console.warn(err.toString());
        process.exit(1);
    }
    if (data) {
        console.log('ok - ' + s3paths[0]);
        s3paths.shift();
    }
    if (s3paths.length) {
        s3touch.touch(s3paths[0], cache, topic, lambda, requesterPays, run);
    }
}

if (argv.topic) topic = argv.topic;
if (argv.lambda) lambda = argv.lambda;
if (argv.requesterpays) requesterPays = true;

if (argv.recursive) {
    s3touch.list(s3paths[0], function(err, list) {
        if (err) {
            console.warn(err.toString());
            process.exit(1);
        }
        s3paths = list;
        run();
    });
} else {
    run();
}

